/// <reference types="node" />
import { Progress } from 'got';
import { Readable } from 'stream';
import { UploadSessionType } from './graphql/generated';
import { PresignedPost } from './graphql/mutations/UploadSessionMutation';
declare type ProgressHandler = (props: {
    progress?: Progress;
    isComplete?: boolean;
    error?: Error;
}) => void;
export declare function uploadAsync(type: UploadSessionType, path: string, handleProgressEvent: ProgressHandler): Promise<{
    url: string;
    bucketKey: string;
}>;
export declare function uploadWithPresignedPostAsync(stream: Readable | Buffer, presignedPost: PresignedPost, handleProgressEvent?: ProgressHandler): Promise<string>;
export {};
