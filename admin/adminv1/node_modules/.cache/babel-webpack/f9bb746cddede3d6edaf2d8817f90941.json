{"ast":null,"code":"import { httpOptions, httpAll } from '../_config/headers.service';\nimport { environment } from '../../environments/environment.prod';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./_auth/token.service\";\nexport let CrudService = /*#__PURE__*/(() => {\n  class CrudService {\n    constructor(http, tokenSrv) {\n      this.http = http;\n      this.tokenSrv = tokenSrv;\n    }\n\n    get(route) {\n      let user = this.tokenSrv.getNivel();\n      return this.http.get(`${environment.API}/api/${user}/${route}`, httpAll);\n    } //Listar por ID\n\n\n    getByID(route, id) {\n      let user = this.tokenSrv.getNivel();\n      return this.http.get(`${environment.API}/api/${user}/${route}/${id}`, httpAll);\n    } //Criar\n\n\n    post(route, data) {\n      let user = this.tokenSrv.getNivel();\n      return this.http.post(`${environment.API}/api/${user}/${route}`, data, httpOptions);\n    } //Enviar Imagens\n\n\n    postImage(data) {\n      let id = this.tokenSrv.getUser().id;\n      let user = this.tokenSrv.getNivel();\n      return this.http.post(`${environment.API}/api/${user}/profile/${id}`, data, httpOptions);\n    } //Atualizar\n\n\n    update(route, id, data) {\n      let user = this.tokenSrv.getNivel();\n      return this.http.put(`${environment.API}/api/${user}/${route}/${id}`, data, httpOptions);\n    } //Deletar\n\n\n    delete(route, id) {\n      let user = this.tokenSrv.getNivel();\n      return this.http.delete(`${environment.API}/api/${user}/${route}/${id}`, httpAll);\n    }\n\n  }\n\n  CrudService.ɵfac = function CrudService_Factory(t) {\n    return new (t || CrudService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.TokenService));\n  };\n\n  CrudService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CrudService,\n    factory: CrudService.ɵfac,\n    providedIn: 'root'\n  });\n  return CrudService;\n})();","map":null,"metadata":{},"sourceType":"module"}